{"name":"Emeril","tagline":"Tag And Release Chef Cookbooks As A Library","body":"[![Gem Version](https://badge.fury.io/rb/emeril.png)](http://badge.fury.io/rb/emeril)\r\n[![Build Status](https://travis-ci.org/fnichol/emeril.png?branch=master)](https://travis-ci.org/fnichol/emeril)\r\n[![Code Climate](https://codeclimate.com/github/fnichol/emeril.png)](https://codeclimate.com/github/fnichol/emeril)\r\n[![Test Coverage](https://codeclimate.com/github/fnichol/emeril/badges/coverage.svg)](https://codeclimate.com/github/fnichol/emeril)\r\n[![Dependency Status](https://gemnasium.com/fnichol/emeril.png)](https://gemnasium.com/fnichol/emeril)\r\n[![Inline docs](http://inch-ci.org/github/fnichol/emeril.png?branch=master)](http://inch-ci.org/github/fnichol/emeril)\r\n\r\nKick it up a notch! Emeril is a library that helps you release your Chef\r\ncookbooks from Rake, Thor, or a Ruby library. If `rake release` is all you\r\nare after, this should fit the bill.\r\n\r\n## <a name=\"tl-dr\"></a> tl;dr\r\n\r\nHow do you get started? Without much fanfare&hellip;\r\n\r\n```sh\r\necho \"gem 'emeril'\" > Gemfile\r\nbundle install\r\necho \"require 'emeril/rake'\" > Rakefile\r\nbundle exec rake release\r\n```\r\n\r\n**Bam!**\r\n\r\nNeed more details? Read on&hellip;\r\n\r\n## <a name=\"screencast\"></a> Screencast\r\n\r\nHere is a short screencast demonstating how Emeril can be used to release\r\na cookbook to the Supermarket site.\r\n\r\n[![Emeril screencast](https://raw.github.com/fnichol/emeril/master/images/emeril-vid.png)](http://vimeo.com/fnichol/emeril)\r\n\r\n## <a name=\"how-it-works\"></a> How It Works\r\n\r\nEmeril has 2 primary tasks and goals:\r\n\r\n1. Tag a Git commit with a semantic version tag with the form `\"v1.2.5\"` (by\r\n   default)\r\n2. Optionally publish a versioned release of the cookbook to the\r\n   [Supermarket site][supermarket_site]\r\n\r\nThe Git tagging is currently accomplished via shell out, so Git must be\r\ninstalled on your system.\r\n\r\nIn order to bypass the deeply coupled `cookbook_path` assumptions that exist\r\nin the Knife plugins, the publishing task (implemented by the\r\n[Publisher class][publisher_class]) will create a temporary sandboxed copy\r\nof the primary cookbook files for use by the\r\n[CookbookSiteShare][knife_plugin] Knife plugin. The following files are\r\nconsidered production cookbook files:\r\n\r\n* `README.*`\r\n* `CHANGELOG.*`\r\n* `metadata.{json,rb}`\r\n* `attributes/**/*`\r\n* `definitions/**/*`\r\n* `files/**/*`\r\n* `libraries/**/*`\r\n* `providers/**/*`\r\n* `recipes/**/*`\r\n* `resources/**/*`\r\n* `templates/**/*`\r\n\r\nIf the above list seems incomplete or incorrect, please submit an\r\n[issue][issues].\r\n\r\n## <a name=\"installation\"></a> Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'emeril'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```sh\r\nbundle\r\n```\r\n\r\nOr install it yourself as:\r\n\r\n```sh\r\ngem install emeril\r\n```\r\n\r\n## <a name=\"usage\"></a> Usage\r\n\r\n### <a name=\"usage-setup\"></a> Credentials Setup\r\n\r\nEmeril currently uses the [CookbookSiteShare][knife_plugin] to do most of the\r\nheavy lifting, so you will need a minimally configured [knife.rb][knife_rb]\r\nfile with some required attributes set.\r\n\r\nThere are 2 configuration items you need:\r\n\r\n1. Your [Supermarket site][supermarket_site] username, chosen at signup time.\r\n2. The file path to your [Supermarket site][supermarket_site] user certificate.\r\n   When you sign up to the Supermarket site, the site will provide this key to\r\n   you as a `*.pem` file.\r\n\r\nThe easiest way to get setup is to add both of these items to your default\r\n`knife.rb` file located at `$HOME/.chef/knife.rb`. If you are setting this\r\nfile up for the first time, give this a go (substituting your username, and\r\nkey location):\r\n\r\n```sh\r\nmkdir -p $HOME/.chef\r\ncat <<KNIFE_RB > $HOME/.chef/knife.rb\r\nnode_name     \"fnichol\"\r\nclient_key    File.expand_path('~/.chef/fnichol.pem')\r\nKNIFE_RB\r\n```\r\n\r\n### <a name=\"usage-rake\"></a> Rake Tasks\r\n\r\nTo add the default Rake task (`rake release`), add the following to your\r\n`Rakefile`:\r\n\r\n```ruby\r\nrequire 'emeril/rake'\r\n```\r\n\r\nIf you need to further customize the `Emeril::Releaser` object you can use\r\nthe more explicit format with a block:\r\n\r\n```ruby\r\nrequire 'emeril/rake_tasks'\r\n\r\nEmeril::RakeTasks.new do |t|\r\n  # turn on debug logging\r\n  t.config[:logger].level = :debug\r\n\r\n  # disable git tag prefix string\r\n  t.config[:tag_prefix] = false\r\n\r\n  # set a category for this cookbook\r\n  t.config[:category] = \"Applications\"\r\nend\r\n```\r\n\r\nIf your cookbook is not on the Supermarket site, you can skip the publishing\r\nstep with the block form:\r\n\r\n```ruby\r\nrequire 'emeril/rake_tasks'\r\n\r\nEmeril::RakeTasks.new do |t|\r\n  t.config[:publish_to_supermarket] = false\r\nend\r\n```\r\n\r\n### <a name=\"usage-rake\"></a> Thor Tasks\r\n\r\nTo add the default Thor task (`thor emeril:release`), add the following to your\r\n`Thorfile`:\r\n\r\n```ruby\r\nrequire 'emeril/thor'\r\n```\r\n\r\nIf you need to further customize the `Emeril::Releaser` object you can use\r\nthe more explicit format with a block:\r\n\r\n```ruby\r\nrequire 'emeril/thor_tasks'\r\n\r\nEmeril::ThorTasks.new do |t|\r\n  # turn on debug logging\r\n  t.config[:logger].level = :debug\r\n\r\n  # disable git tag prefix string\r\n  t.config[:tag_prefix] = false\r\n\r\n  # set a category for this cookbook\r\n  t.config[:category] = \"Applications\"\r\nend\r\n```\r\n\r\nIf your cookbook is not on the Supermarket site, you can skip the publishing\r\nstep with the block form:\r\n\r\n```ruby\r\nrequire 'emeril/thor_tasks'\r\n\r\nEmeril::ThorTasks.new do |t|\r\n  t.config[:publish_to_supermarket] = false\r\nend\r\n```\r\n\r\n### <a name=\"usage-ruby\"></a> Ruby Library\r\n\r\nThe Ruby API is fairly straight forward, but keep in mind that loading or\r\npopulating `Chef::Config[:node_name]` and `Chef::Config[:client_key]` is\r\nthe responsibility of the caller, not Emeril.\r\n\r\nFor example, to load configuration from [knife.rb][knife_rb] and invoke the\r\nsame code as the default Rake and Thor tasks, use the following:\r\n\r\n```ruby\r\n# Populate Chef::Config from knife.rb\r\nrequire 'chef/knife'\r\nChef::Knife.new.configure_chef\r\n\r\n# Perform the git tagging and share to the Supermarket site\r\nrequire 'emeril'\r\nEmeril::Releaser.new(logger: Chef::Log).run\r\n```\r\n\r\n## <a name=\"faq\"></a> Frequently Asked Questions\r\n\r\n* **\"Why doesn't Emeril automatically bump version numbers?\"**\r\n  Emeril assumes that you are using a [Semantic Versioning][semver_site] scheme\r\n  for your cookbooks. Consequently it is very hard to determine what the\r\n  next version number should be when this number is coupled to the changes\r\n  accompanying the release. The next release could contain a bug fix, a new\r\n  feature, or contain a backwards incompatible change--all of which have a\r\n  bearing on the version number.\r\n* **\"Okay, what if I supplied the version number, couldn't Emeril help me\r\n  then?\"** Perhaps, but don't forget the other essential release artifact:\r\n  a project [changelog][changelog_wikipedia]. While the maintenance schedule\r\n  of the changelog is up to each author, it is sometimes desirable to\r\n  combine the version bump and changelog items in [one][ex1] [git][ex2]\r\n  [commit][ex3]. Emeril will tag and release your cookbook based on the\r\n  last Git commit which is presumably your *version-bump-and-changelog*\r\n  commit.\r\n* **\"How do I change the category for my cookbook?\"** Emeril will maintain\r\n  the category used on the Supermarket site across releases. By default, new\r\n  cookbooks will be put in the `\"Other\"` category. Otherwise, check out\r\n  the [Rake](#usage-rake) and [Thor](#usage-thor) sections for further\r\n  configuration help.\r\n* **\"Why is Emeril complaining that I'm missing the name attribute in my\r\n  metadata.rb?\"** You want to set this name attribute. It unambiguously sets\r\n  the name of the cookbook and not the directory name that happens to contain\r\n  the cookbook code. Modern tools such as [Berkshelf][berkshelf_site] require\r\n  this for dependency resolution and the [Foodcritic][foodcritic_site]\r\n  cookbook linting tool has rule [FC045][fc045] to help catch this omission.\r\n\r\n## <a name=\"alternatives\"></a> Alternatives\r\n\r\n* [knife-community][knife_community] - a more complete, workflow-enabled tool\r\n  by [Mike Fiedler](https://github.com/miketheman).\r\n* [knife community site share][knife_share] - with some extra/manual git\r\n  tagging, correct directory structure, and workflow. Ships with the\r\n  [Chef gem][chef_gem].\r\n\r\n## <a name=\"development\"></a> Development\r\n\r\n* Source hosted at [GitHub][repo]\r\n* Report issues/questions/feature requests on [GitHub Issues][issues]\r\n\r\nPull requests are very welcome! Make sure your patches are well tested.\r\nIdeally create a topic branch for every separate change you make. For\r\nexample:\r\n\r\n1. Fork the repo\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## <a name=\"authors\"></a> Authors\r\n\r\nCreated and maintained by [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>)\r\n\r\n## <a name=\"license\"></a> License\r\n\r\nMIT (see [LICENSE.txt][license])\r\n\r\n[license]:      https://github.com/fnichol/emeril/blob/master/LICENSE.txt\r\n[fnichol]:      https://github.com/fnichol\r\n[repo]:         https://github.com/fnichol/emeril\r\n[issues]:       https://github.com/fnichol/emeril/issues\r\n[contributors]: https://github.com/fnichol/emeril/contributors\r\n\r\n[berkshelf_site]:   http://berkshelf.com/\r\n[changelog_wikipedia]: http://en.wikipedia.org/wiki/Changelog\r\n[chef_gem]:         https://github.com/opscode/chef\r\n[supermarket_site]: https://supermarket.getchef.com/\r\n[ex1]:              https://github.com/fnichol/chef-ruby_build/commit/c940b5e9cd40eaba10d6285de6648f4d25fe959d\r\n[ex2]:              https://github.com/fnichol/chef-homesick/commit/80e558ff921f1c59698f6942214c0224a24392d7\r\n[ex3]:              https://github.com/fnichol/chef-openoffice/commit/bf84aba0690a6b155b499b06df953be19a3aead1\r\n[fc045]:            http://acrmp.github.io/foodcritic/#FC045\r\n[foodcritic_site]:  http://acrmp.github.io/foodcritic/\r\n[knife_plugin]:     https://github.com/opscode/chef/blob/master/lib/chef/knife/cookbook_site_share.rb\r\n[knife_rb]:         http://docs.opscode.com/config_rb_knife.html\r\n[knife_community]:  http://miketheman.github.io/knife-community/\r\n[knife_share]:      http://docs.opscode.com/knife_cookbook_site.html#share\r\n[publisher_class]:  https://github.com/fnichol/emeril/blob/master/lib/emeril/publisher.rb\r\n[semver_site]:      http://semver.org/\r\n","google":"UA-29670723-1","note":"Don't delete this file! It's used internally to help with page regeneration."}